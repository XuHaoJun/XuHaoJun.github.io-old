<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: org-mode | (xu-hao-jun)]]></title>
  <link href="http://XuHaoJun.github.io/blog/categories/org-mode/atom.xml" rel="self"/>
  <link href="http://XuHaoJun.github.io/"/>
  <updated>2014-05-16T21:29:09+08:00</updated>
  <id>http://XuHaoJun.github.io/</id>
  <author>
    <name><![CDATA[XuHaoJun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Org-mode + Octopress + Github 來搭建 Blog]]></title>
    <link href="http://XuHaoJun.github.io/blog/2013-08-23-emacs-org-octopress.html"/>
    <updated>2013-08-23T00:00:00+08:00</updated>
    <id>http://XuHaoJun.github.io/blog/emacs-org-octopress</id>
    <content type="html"><![CDATA[<ul class='org-ul'>
<li>優點
<ul class='org-ul'>
<li>免費網域、免費託管、免費流量
</li>
<li>版本管理，不用擔心備份！
</li>
<li>Org-mode or Markdown 撰寫效率好
</li>
</ul>
</li>
<li>缺點
<ul class='org-ul'>
<li>技術門檻要求較高 <br />
    需要懂一些 Git, Github, Org-mode 或 Makrdown，更進階要客製化 Blog 的話，可能還要懂些許 Ruby (jekyll)
</li>
<li>Org-mode 的 code block 沒有 markdown's code block 的 title url 功能。
</li>
</ul>
</li>
</ul><p>
<!-- more -->
</p><hr /><div class='outline-2' id='outline-container-sec-1'>
<h2 id='sec-1'>Org-mode</h2>
<div class='outline-text-2' id='text-1'>
<blockquote>
<p>
Org mode is for keeping notes, maintaining TODO lists, planning projects, and
authoring documents with a fast and effective plain-text system. <br />
<b><a href='http://orgmode.org/'>http://orgmode.org/</a></b>
</p>
</blockquote>
<p>
Org-mode 是建立於 Emacs(編輯器) 之上的插件，是一種輕量級的標記語言可以用來做時間管理、筆記、生成 Html &#x2026; ，同類型的流行的還有 Markdown，這篇文章基本上就是
Emacs + org-mode 寫的，之後在透過插件 <a href='https://github.com/yoshinari-nomura/org-octopress'>org-octopress</a> 生成給 Octopress 用。
</p>
</div>


<div class='outline-3' id='outline-container-sec-1-1'>
<h3 id='sec-1-1'>Install Emacs(24.x)</h3>
<div class='outline-text-3' id='text-1-1'>
<p>
我只會在 Linux 平台上用 Package 裝。
</p>

<p>
一些流行的 Linux distribution 的 Package Manager 安裝方法。
</p>
<div class='org-src-container'>

<pre class='src src-sh'>pacman -S emacs          <span style='color: #586e75;'># </span><span style='color: #586e75;'>Archlinux</span>
apt-get install emacs    <span style='color: #586e75;'># </span><span style='color: #586e75;'>Ubuntu</span>
yum install emacs        <span style='color: #586e75;'># </span><span style='color: #586e75;'>Fedora</span>
</pre>
</div>
</div>
</div>
<div class='outline-3' id='outline-container-sec-1-2'>
<h3 id='sec-1-2'>Install org and org-octopress</h3>
<div class='outline-text-3' id='text-1-2'>
<p>
用 Emacs 裡的 Package Manager 安裝：
</p>
<div class='org-src-container'>

<pre class='src src-sh'><span style='color: #586e75;'># </span><span style='color: #586e75;'>&#22312;&#23478;&#30446;&#37636;&#24314;&#19968;&#20491; .emacs.d &#36039;&#26009;&#22846;&#24460;&#65292;&#22312;&#35041;&#38754;&#24314; init.el</span>
mkdir ~/.emacs.d
touch ~/.emacs.d/init.el
</pre>
</div>

<p>
在 init.el 添加：
</p>
<div class='org-src-container'>

<pre class='src src-emacs-lisp'>(add-to-list 'package-archives
  '(<span style='color: #2aa198;'>"marmalade"</span> . <span style='color: #2aa198;'>"http://marmalade-repo.org/packages/"</span>))

(add-to-list 'package-archives
  '(<span style='color: #2aa198;'>"melpa"</span> . <span style='color: #2aa198;'>"http://melpa.milkbox.net/packages/"</span>) t)

(package-initialize)
</pre>
</div>

<p>
開啟 Emacs 鍵入 <code>M-x package-install org RET</code> ，把 org 換成 org-octopress 後安裝。
</p>
</div>
</div>
<div class='outline-3' id='outline-container-sec-1-3'>
<h3 id='sec-1-3'>Org-octopress Setup</h3>
<div class='outline-text-3' id='text-1-3'>
<p>
以下是從 <a href='https://github.com/yoshinari-nomura/org-octopress'>org-octopress</a> 的 README 裡擷取 Basic Settings 的片段。
</p>

<p>
添加在 init.el。
</p>
<ul class='org-ul'>
<li>Emacs Settings:
</li>
</ul>
<div class='org-src-container'>

<pre class='src src-emacs-lisp'>(<span style='color: #859900; font-weight: bold;'>require</span> '<span style='color: #268bd2; font-weight: bold;'>org-octopress</span>)
(setq org-octopress-directory-top       <span style='color: #2aa198;'>"~/octopress/source"</span>)
(setq org-octopress-directory-posts     <span style='color: #2aa198;'>"~/octopress/source/_posts"</span>)
(setq org-octopress-directory-org-top   <span style='color: #2aa198;'>"~/octopress/source"</span>)
(setq org-octopress-directory-org-posts <span style='color: #2aa198;'>"~/octopress/source/blog"</span>)
(setq org-octopress-setup-file          <span style='color: #2aa198;'>"~/org-sty/setupfile.org"</span>)
</pre>
</div>

<ul class='org-ul'>
<li>Octopress Settings:
</li>
</ul>
<p>
In octopress/_config.yml, you must set the permelink attribute: <br />
<code>permalink: /blog/:year-:month-:day-:title.html</code>
</p>
</div>
</div>
</div><div class='outline-2' id='outline-container-sec-2'>
<h2 id='sec-2'>Octopress</h2>
<div class='outline-text-2' id='text-2'>
<p>
<a href='http://octopress.org/'>Octopress</a> 是一套 Blog 的框架，所以一開始你的 Blog 就有一個簡潔的外觀，功能上有支援 Twitter, Facebook, Delicious 等等，也可以用來產生靜態 Blog 後放在 Github
上，預設是用 Markdown 來撰寫文章。
</p>
</div>

<div class='outline-3' id='outline-container-sec-2-1'>
<h3 id='sec-2-1'>Install and Use Octopress</h3>
<div class='outline-text-3' id='text-2-1'>
<p>
要先安裝 <a href='http://www.ruby-lang.org/en/'>Ruby</a> 和 <a href='http://gitscm.com/'>Git</a>。 <br />
官方的方法： <a href='http://octopress.org/docs/setup/'>Octopress Setup</a>
</p>
</div>
</div>
</div><div class='outline-2' id='outline-container-sec-3'>
<h2 id='sec-3'>Github</h2>
<div class='outline-text-2' id='text-3'>
<p>
首先有個 <a href='https://github.com/'>Github</a> 的帳號後，建立一個 Repository 為 username.github.io，之後去你的 octopress 的根目錄鍵入 <code>bundle exec rake setup_github_page</code> 輸入剛剛建完給你的 url。
</p>

<p>
官方文檔: <a href='https://help.github.com/'>GithubHelp</a>
</p>
</div>
</div><div class='outline-2' id='outline-container-sec-4'>
<h2 id='sec-4'>基本流程</h2>
<div class='outline-text-2' id='text-4'>
<ol class='org-ol'>
<li>開啟 Emacs 鍵入 <code>M-x org-octopress RET</code> ，會到 org-octopress 的界面鍵入 <code>w</code>
和標題，開始撰寫文章。
</li>
<li>寫完後，鍵入 <code>C-c C-e P x octopress</code> 來生成靜態網頁
</li>
<li>在你的 octopress 根目錄鍵入 <code>bundle exec rake gen_deploy</code>
</li>
<li>也可以把 source branch 下 push 上去做版本管理 <code>git push -u origin source</code>
</li>
</ol>

<p>
文章打到一半或要做確認的時候用(需先生成靜態網頁) <code>bundle exec rake preview</code> ，之後在
<a href='http://localhost:4000/'>http://localhost:4000/</a> 可以看你的 Blog。
</p>
</div>
</div>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解決 Org-mode(8.x) 轉 Html 中文換行變空格問題]]></title>
    <link href="http://XuHaoJun.github.io/blog/2013-08-19-han-extra-space-org-mode.html"/>
    <updated>2013-08-19T00:00:00+08:00</updated>
    <id>http://XuHaoJun.github.io/blog/han-extra-space-org-mode</id>
    <content type="html"><![CDATA[<p>
基本上是照這兩篇提供的解法去依樣畫葫蘆出來的 org-mode 版本。
</p><ul class='org-ul'>
<li><a href='http://stackoverflow.com/questions/8550112/prevent-browser-converting-n-between-lines-into-space-for-chinese-characters/8551033#8551033'>Prevent browser converting '\n' between lines into space (for Chinese characters)</a>
</li>
<li><a href='http://chenyufei.info/blog/2011-12-23/fix-chinese-newline-becomes-space-in-browser-problem/'>解决 Markdown 转 HTML 中文换行变空格的问题</a>
</li>
</ul><p>
<!-- more -->
</p><p>
大致上的解法是將 html 檔案裡，將中文字後有接個換行符的把他合併為一行。 <br />
感覺上是個 workaround 的方法，如果在餵給 rss 似乎又會有問題，不過我無法忍受那些多餘的空格。
</p><p>
代碼如下：
</p><div class='org-src-container'>

<pre class='src src-emacs-lisp'>(<span style='color: #859900; font-weight: bold;'>defun</span> <span style='color: #268bd2;'>han/org-html-delete-extra-space</span> (string backend info)
  <span style='color: #2aa198;'>"Let chinese word to a line if match /han\newline/"</span>
  (<span style='color: #859900; font-weight: bold;'>when</span> (and (org-export-derived-backend-p backend 'html)
             (string-match <span style='color: #2aa198;'>"\\cc\n"</span> string))
    (replace-regexp-in-string <span style='color: #2aa198;'>"</span><span style='color: #859900; font-weight: bold;'>\\</span><span style='color: #b58900; font-weight: bold;'>(</span><span style='color: #2aa198;'>\\cc</span><span style='color: #859900; font-weight: bold;'>\\</span><span style='color: #b58900; font-weight: bold;'>)</span><span style='color: #2aa198;'>\n</span><span style='color: #859900; font-weight: bold;'>\\</span><span style='color: #b58900; font-weight: bold;'>(</span><span style='color: #2aa198;'>\\cc</span><span style='color: #859900; font-weight: bold;'>\\</span><span style='color: #b58900; font-weight: bold;'>)</span><span style='color: #2aa198;'>"</span> <span style='color: #2aa198;'>"\\1\\2"</span> string)))

(<span style='color: #859900; font-weight: bold;'>eval-after-load</span> 'ox-html
  '(add-to-list 'org-export-filter-final-output-functions
                'han/org-html-delete-extra-space))
</pre>
</div><p>
順便吐槽一下 emacs 裡的 regex，實在太多 <code>\</code> 了 <br />
這是上面連結文中 Ruby 的 Regex 樣式：
</p><div class='org-src-container'>

<pre class='src src-ruby'><span style='color: #586e75;'># </span><span style='color: #586e75;'>\p{Han} &#26159;&#28450;&#23383;</span>
gsub(<span style='color: #2aa198;'>/(\p{Han})\n(\p{Han})/</span>m, <span style='color: #2aa198;'>'\1\2'</span>)
</pre>
</div><p>
這是 Emacs-lisp 的：
</p><div class='org-src-container'>

<pre class='src src-emacs-lisp'><span style='color: #586e75;'>;; </span><span style='color: #586e75;'>\\cc &#26159;&#28450;&#23383;</span>
(replace-regexp-in-string <span style='color: #2aa198;'>"</span><span style='color: #859900; font-weight: bold;'>\\</span><span style='color: #b58900; font-weight: bold;'>(</span><span style='color: #2aa198;'>\\cc</span><span style='color: #859900; font-weight: bold;'>\\</span><span style='color: #b58900; font-weight: bold;'>)</span><span style='color: #2aa198;'>\n</span><span style='color: #859900; font-weight: bold;'>\\</span><span style='color: #b58900; font-weight: bold;'>(</span><span style='color: #2aa198;'>\\cc</span><span style='color: #859900; font-weight: bold;'>\\</span><span style='color: #b58900; font-weight: bold;'>)</span><span style='color: #2aa198;'>"</span> <span style='color: #2aa198;'>"\\1\\2"</span> string)
</pre>
</div>]]></content>
  </entry>
  
</feed>
