<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: evil-mode | (xu-hao-jun)]]></title>
  <link href="http://XuHaoJun.github.io/blog/categories/evil-mode/atom.xml" rel="self"/>
  <link href="http://XuHaoJun.github.io/"/>
  <updated>2014-05-11T23:45:21+08:00</updated>
  <id>http://XuHaoJun.github.io/</id>
  <author>
    <name><![CDATA[XuHaoJun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ruby block match and jump (emacs evil-mode)]]></title>
    <link href="http://XuHaoJun.github.io/blog/2013-10-19-evil-ruby-jump-item.html"/>
    <updated>2013-10-19T00:00:00+08:00</updated>
    <id>http://XuHaoJun.github.io/blog/evil-ruby-jump-item</id>
    <content type="html"><![CDATA[<div class='outline-2' id='outline-container-sec-1'>
<h2 id='sec-1'>Description</h2>
<div class='outline-text-2' id='text-1'>
<p>
Emacs evil-mode <code>%</code> 功能加上 Ruby block 的配對，例如將光標放在 <code>class Foo</code> 上後鍵入 <code>%</code> 可以跳轉至相符的 <code>end</code> 。
</p>

<p>
<!-- more -->
</p>
</div>
</div><div class='outline-2' id='outline-container-sec-2'>
<h2 id='sec-2'>Example</h2>
<div class='outline-text-2' id='text-2'>

<div class='figure'>
<p><img alt='evil-ruby-jump-item.gif' src='./img/evil-ruby-jump-item.gif' />
</p>
</div>
</div>
</div><div class='outline-2' id='outline-container-sec-3'>
<h2 id='sec-3'>Source Code</h2>
<div class='outline-text-2' id='text-3'>
<div class='org-src-container'>

<pre class='src src-emacs-lisp'><span style='color: #586e75;'>;; </span><span style='color: #586e75;'>Require package: (evil)</span>
(<span style='color: #859900; font-weight: bold;'>evil-define-motion</span> <span style='color: #268bd2;'>evil-ruby-jump-item</span> (count)
  <span style='color: #839496; font-weight: bold;'>:jump</span> t
  <span style='color: #839496; font-weight: bold;'>:type</span> inclusive
  (<span style='color: #859900; font-weight: bold;'>cond</span> ((string-match ruby-block-beg-re (current-word))
         (ruby-end-of-block count))
        ((string-match ruby-block-end-re (current-word))
         (ruby-beginning-of-block count))
        (t
         (evil-jump-item count))))

(add-hook 'ruby-mode-hook
          (<span style='color: #859900; font-weight: bold;'>lambda</span> ()
            (define-key evil-normal-state-local-map <span style='color: #2aa198;'>"%"</span> 'evil-ruby-jump-item)
            (define-key evil-motion-state-local-map <span style='color: #2aa198;'>"%"</span> 'evil-ruby-jump-item)))
</pre>
</div>
</div>
</div>]]></content>
  </entry>
  
</feed>
